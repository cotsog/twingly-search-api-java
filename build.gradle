apply plugin: "idea"
apply plugin: "java"
version = "0.0.2"
ext {
    sourceLevel = 1.7
    targetLevel = sourceLevel
    sourceEncoding = "UTF-8"
//testing
    spockVersion = "1.0-groovy-2.3"
    groovyVersion = "2.3.3"
    junitVersion = "4.12"
    cglibVersion = "3.2.0"
    objenesisVersion = "2.2"
    jaxbVersion = "2.2.12"
    betamaxVersion = "2.0-SNAPSHOT"

    libs = [
            jaxb         : "javax.xml.bind:jaxb-api:$jaxbVersion",
            junit        : "junit:junit:$junitVersion",
            groovy       : "org.codehaus.groovy:groovy-all:$groovyVersion",
            spock        : "org.spockframework:spock-core:$spockVersion",
            cglib        : "cglib:cglib-nodep:$cglibVersion",
            objenesis    : "org.objenesis:objenesis:$objenesisVersion",
            betamax_proxy: "co.freeside.betamax:betamax-proxy:$betamaxVersion",
            betamax_junit: "co.freeside.betamax:betamax-junit:$betamaxVersion"
    ]

    javadocFolder = "doc"

    sharedManifest = manifest {
        attributes("Implementation-Title": 'Twingly Search API Java',
                "Implementation-Version": version)
    }
}

repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
    maven { url "http://oss.jfrog.org/oss-snapshot-local/" }
}
dependencies {
    compile libs.jaxb
    testCompile libs.junit
    testCompile libs.groovy
    testCompile libs.spock
    testRuntime libs.cglib
    testRuntime libs.objenesis
    testCompile libs.betamax_proxy
    testCompile libs.betamax_junit
}
//create a single Jar with all dependencies
task generateOneJar(type: Jar) {
    manifest = project.manifest {
        from sharedManifest
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task generateJavadocs(type: Javadoc) {
    source = sourceSets.main.allJava
    options.memberLevel = JavadocMemberLevel.PROTECTED
    classpath = configurations.compile
    destinationDir = file(javadocFolder)
}

tasks.withType(JavaCompile.class) {
    sourceCompatibility = sourceLevel
    targetCompatibility = targetLevel
    options.deprecation = false
    options.warnings = false
    options.encoding = sourceEncoding
    options.compilerArgs = ["-Xmaxerrs", "20", "-Xmaxwarns", "0", "-Xlint:all"]
}
